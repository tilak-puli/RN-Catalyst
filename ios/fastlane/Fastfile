default_platform(:ios)

platform :ios do

  desc 'Create keychain'
  lane :keychain_produce do
    create_keychain(
  name: "RNCatalyst_adhoc",
  password: "catalyst",
  unlock: true,
  timeout: 0,
  lock_when_sleeps: true
)
  end
  
  desc 'Fetch certificates and provisioning profiles'
  lane :certificates do
    keychain_produce 
    match(
        type: 'adhoc', 
        app_identifier: 'org.reactjs.native.example.catalystUiReactNativeStarter', 
        readonly:true, 
        keychain_name:'RNCatalyst_adhoc', 
        keychain_password: ENV['KEYCHAIN_PASSWORD']
    )
  end

  desc 'Build the iOS application.'
  lane :build do
    increment_build_number(
        build_number: ENV['BUNDLE_VERSION'] 
    )
    increment_version_number(
        version_number: ENV['BUNDLE_SHORT_VERSION']
    )
    gym(
      scheme: "catalystUiReactNativeStarter",
      workspace: 'catalystUiReactNativeStarter.xcworkspace',
      # project: './ios/YourAppName.xcodeproj', # Use this command if you don't have an iOS .xcworkspace file.
      configuration: 'Release',
      export_method: 'ad-hoc',
      export_options: {
        "provisioningProfiles": {
          "org.reactjs.native.example.catalystUiReactNativeStarter": "match AdHoc org.reactjs.native.example.catalystUiReactNativeStarter"
        }
      }
    )
  end

  desc 'Beta distribution to Firebase'
  lane :distribute do
    firebase_app_distribution(
      app:ENV['FIREBASE_APP_ID_IOS'],
      release_notes: ENV['RELEASE_NOTES'],
      groups:"development-team",
      firebase_cli_token:ENV['FIREBASE_CLI_TOKEN']
    )
  end

end